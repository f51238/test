import os
import csv
import re
import pandas as pd

folder_path = "/path/to/folder"  # Replace with the path to your folder
redact_names_file = "/path/to/redact_names.csv"  # Path to the file with names to redact
output_file = "anonymized_data.csv"  # Output file name

csv_files = [file for file in os.listdir(folder_path) if file.endswith(".csv")]

# Read the redact names CSV file
redact_names_df = pd.read_csv(redact_names_file)

# Extract first names and surnames from the names to be redacted
first_names = redact_names_df['First Name'].tolist()
surnames = redact_names_df['Surname'].tolist()

# Regular expressions for matching names, dates of birth, and ID numbers
name_regex = re.compile(r"\b[A-Za-z]+\b")
dob_regex = re.compile(r"\b\d{1,2}/\d{1,2}/\d{4}\b")
id_regex = re.compile(r"\bE\d{7}\b")

# Function to perform anonymization
def anonymize_text(text):
    # Replace first names with a placeholder
    for first_name in first_names:
        text = re.sub(r"\b{}\b".format(first_name), "REDACTED_FIRSTNAME", text)

    # Replace surnames with a placeholder
    for surname in surnames:
        text = re.sub(r"\b{}\b".format(surname), "REDACTED_SURNAME", text)

    # Replace full names with a placeholder
    for full_name in redact_names_df['Full Name']:
        text = text.replace(full_name, "REDACTED_NAME")

    # Replace dates of birth with a placeholder
    text = dob_regex.sub("REDACTED_DOB", text)

    # Replace IDs with a placeholder
    text = id_regex.sub("REDACTED_ID", text)

    return text

# Open the output file in append mode
with open(output_file, "a", newline="", encoding="utf-8") as output_csv:
    writer = csv.writer(output_csv)

    # Loop through each CSV file in the folder
    for csv_file in csv_files:
        # Construct the full path to the current CSV file
        file_path = os.path.join(folder_path, csv_file)

        # Open the current CSV file with the appropriate encoding
        with open(file_path, "r", encoding="utf-8") as input_csv:
            reader = csv.reader(input_csv)

            # Iterate over each row in the current CSV file
            for row in reader:
                # Anonymize the "long_description" column (assuming it is the second column)
                row[1] = anonymize_text(row[1])

                writer.writerow(row)
